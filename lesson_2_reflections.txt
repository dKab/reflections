Q: What happens when you initialize a repository? Why do you need to do it?

A: Git creates a hidden folder where it stores all the metadata that needed for git to track changes in files. I need to do it to let git know that I want to start track changes of files in this directory.

Q: How is the staging area different from the working directory and the repository? What value do you think it offers?

A: Staging area kinda lies in between working directory and repository. Files that are to be committed are stored there. It gives flexibility and freedom to choose what to commit.

Q: How can you use the staging area to make sure you have one commit per logical change?

A: I can add files to staging area subsequently one by one and therefore commit changes in thoose files separatly. That's how I can make my commits logically independent.

Q: What are some situations when branches would be helpful in keeping your history organized? How would branches help?

A: As was shown in previous video fragment branches may come in handy when I want to try to add some new functionality and at the same time to have a snapshot of current perfectly working version of the project.

Q: How do the diagrams help you visualize the branch structure?

A: They really help!

Q: What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

A: As a result we will have all commits from both branches as though they were made in one branch. Commits will apear sorted by timestamp in git log and latest commit will be the merging commit  which will have two parents.  